var documenterSearchIndex = {"docs":
[{"location":"#","page":"-","title":"-","text":"#Agnostic Bayes Ensemble Documentation ","category":"page"},{"location":"#","page":"-","title":"-","text":"Overview","category":"page"},{"location":"#","page":"-","title":"-","text":"This package has been developed to facilitate increased predictive performance, by combining raw base models in an agnostic fashion,  i.e. the methods don’t use any assumption regarding the used raw models. Furthermore, we specifically implemented ensemble algorithms  that can deal with arbitrary loss function and with regression and classification problems, this holds true for all, except for the  dirichletPosteriorEstimation algorithm, which is limited to classification problems.","category":"page"},{"location":"#","page":"-","title":"-","text":"Hint: In most cases it is advisable to deactivate Hyperthreading for best performance. However, in some rare cases – depending on the (hardware) platform the package runs on- you will get the best performance with Hyperthreading enabled, to be sure, it is best practice to measure the performance with and without Hyperthreading.","category":"page"},{"location":"#List-of-Algorithms-1","page":"-","title":"List of Algorithms","text":"","category":"section"},{"location":"#","page":"-","title":"-","text":"bootstrapPosteriorEstimation","category":"page"},{"location":"#AgnosticBayesEnsemble.bootstrapPosteriorEstimation","page":"-","title":"AgnosticBayesEnsemble.bootstrapPosteriorEstimation","text":"bootstrapPosteriorEstimation( errMat::Matrix{Float64}, samplingBatchSize::Int64, nrRuns::Int64 )\n\n\n\n\ncompute posterior p( h* = h | S ).\n#Arguments\n- `errMat::Matrix{Float64}}`: each column is the prediction error of one hypothesis.\n- `samplingBatchSize::Int64`: sample size per main iteration.\n- `nrRuns::Int64`:            number of passes over predictions.\n#Return\n- `Vector{Float64}`:          Distribution p( h* = h | S ).\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"bootstrapPosteriorEstimation!","category":"page"},{"location":"#AgnosticBayesEnsemble.bootstrapPosteriorEstimation!","page":"-","title":"AgnosticBayesEnsemble.bootstrapPosteriorEstimation!","text":"bootstrapPosteriorEstimation!( errMat::Matrix{Float64}, samplingBatchSize::Int64, nrRuns::Int64, p::Array{Float64} )\n\n\n\ncompute posterior p( h* = h | S ).\n#Arguments\n- `errMat::Matrix{Float64}}`: each column is the prediction error of one hypothesis.\n- `samplingBatchSize::Int64`: sample size per main iteration.\n- `nrRuns::Int64`:            number of passes over predictions.\n- `p::Vector{Float64}`:       resulting posterior p( h* = h | S ).\n#Return\n- `nothing`:                  nothing.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"bootstrapPosteriorCorEstimation","category":"page"},{"location":"#AgnosticBayesEnsemble.bootstrapPosteriorCorEstimation","page":"-","title":"AgnosticBayesEnsemble.bootstrapPosteriorCorEstimation","text":"bootstrapPosteriorCorEstimation( predictions::Matrix{Float64}, y::Array{Float64,1}, samplingBatchSize::Int64, nrRuns::Int64 )\n\n\n\n\ncompute posterior p( h* = h | S ).\n#Arguments\n- `predictions::Matrix{Float64}`: each column is the prediction error of one hypothesis.\n- `t::Vector{Float64}`:           label vector.\n- `samplingBatchSize::Int64`:     sample size per main iteration.\n- `nrRuns::Int64`:                number of main  iterations.\n#Return\n- `Float64`:            Best found meta parameter α.\n\n\n\n\n\nbootstrapPosteriorCorEstimation( predictions::Matrix{Float64}, y::Array{Float64,1}, samplingBatchSize::Int64, nrRuns::Int64 )\n\n\n\n\ncompute posterior p( h* = h | S ).\n#Arguments\n- `predictions::Matrix{Float64}`: each column is the prediction error of one hypothesis.\n- `T::Vector{Float64}`:           label matrix.\n- `samplingBatchSize::Int64`:     sample size per main iteration.\n- `nrRuns::Int64`:                number of main  iterations.\n#Return\n- `Float64`:            Best found meta parameter α.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"dirichletPosteriorEstimation","category":"page"},{"location":"#AgnosticBayesEnsemble.dirichletPosteriorEstimation","page":"-","title":"AgnosticBayesEnsemble.dirichletPosteriorEstimation","text":"dirichletPosteriorEstimation( errMat::Matrix{Float64}, G::Matrix{Float64}, nrRuns::Int64, α_ )\n\n\n\n\ncompute posterior p( h* = h | S ).\n# Arguments\n- `errMat::Matrix{Float64}`: each column is the prediction of one hypothesis.\n- `nrRuns::Int64`:           number of sampling runs.\n- `α_::Float64`:             scalar prior parameter.\n- `sampleSize::Int64`:       number of samples per run.\n# Return\n- `Vector{Float64}`:         posterior distribution\n\n\n\n\n\ndirichletPosteriorEstimation( errMat::Matrix{Float64}, nrRuns::Int64, α_::Float64 )\n\n\n\n\ncompute posterior p( h* = h | S ).\n# Arguments\n- `errMat::Matrix{Float64}`: each column is the prediction of one hypothesis.\n- `nrRuns::Int64`:           number of sampling runs.\n- `α_::Float64`:             scalar prior parameter.\n- `sampleSize::Int64`:       number of samples per run.\n# Return\n- `Vector{Float64}`:         posterior distribution\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"dirichletPosteriorEstimationV2","category":"page"},{"location":"#AgnosticBayesEnsemble.dirichletPosteriorEstimationV2","page":"-","title":"AgnosticBayesEnsemble.dirichletPosteriorEstimationV2","text":"dirichletPosteriorEstimationV2( errMat::Matrix{Float64}, nrRuns::Int64, α_::Float64, sampleSize::Int64 )\ncompute posterior p( h* = h | S ).\n# Arguments\n- `errMat::Matrix{Float64}`: each column is the prediction of one hypothesis.\n- `nrRuns::Int64`:           number of sampling runs.\n- `α_::Float64`:             scalar prior parameter.\n- `sampleSize::Int64`:       number of samples per run.\n# Return\n- `Vector{Float64}`:         posterior distribution\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"GMatrix","category":"page"},{"location":"#AgnosticBayesEnsemble.GMatrix","page":"-","title":"AgnosticBayesEnsemble.GMatrix","text":"GMatrix( d::Int64 )\n\n\n\n\ncompute transformation matrix G.\n#Arguments\n- `d::Int64`:        number of hypothesis used for prediction.\n#Return\n- `Matrix{Float64}`: transformation matrix G.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"dirichletPosteriorEstimation!","category":"page"},{"location":"#AgnosticBayesEnsemble.dirichletPosteriorEstimation!","page":"-","title":"AgnosticBayesEnsemble.dirichletPosteriorEstimation!","text":"dirichletPosteriorEstimation!( errMat::Matrix{Float64}, nrRuns::Int64, α_::Float64, p::Vector{Float64} )\n\n\n\n\ncompute posterior p( h* = h | S ).\n#Arguments\n- `errMat::Matrix{Float64}`: each column is the prediction error of one hypothesis.\n- `nrRuns::Int64`:           number of passes over predictions.\n- `α_::Float64`:             meta parameter value.\n- `p::Vector{Float64}`:      return value posterior p( h* = h | S ).\n#Return\n- `Float64`:            Best found meta parameter α.\n\n\n\n\n\n","category":"function"},{"location":"#","page":"-","title":"-","text":"metaParamSearchValidationDirichlet","category":"page"},{"location":"#AgnosticBayesEnsemble.metaParamSearchValidationDirichlet","page":"-","title":"AgnosticBayesEnsemble.metaParamSearchValidationDirichlet","text":"metaParamSearchValidationDirichlet( Y::Matrix{Float64}, t::Vector{Float64}, nrRuns::Int64, minVal::Float64, maxVal::Float64, nSteps::Int64, holdout::Float64, lossFunc )    \n\n\n\n\ncompute best α parameter regarding predictive performance.\n#Arguments\n- `Y::Matrix{Float64}`: each column is the prediction error of one hypothesis.\n- `t::Vector{Float64}`: label vector.\n- `nrRuns::Int64`:      number of passes over predictions.\n- `minVal::Float64`:    minimum value of α.\n- `maxVal::Float64`:    maximum value of α.\n- `nSteps::Int64`:      number of steps between min and max val.\n- `holdout::Float64`:   percentage used in holdout.\n- `lossFunc`:           error function handle.\n#Return\n- `Float64`:            Best found meta parameter α.\n\n\n\n\n\n","category":"function"},{"location":"#Tutorials-1","page":"-","title":"Tutorials","text":"","category":"section"},{"location":"#","page":"-","title":"-","text":"Pages = [\r\n    \"tutorials/page1.md\",\r\n    \"tutorials/page2.md\",\r\n    \"tutorials/page3.md\"\r\n    ]\r\nDepth = 2","category":"page"},{"location":"#Another-Section-1","page":"-","title":"Another Section","text":"","category":"section"},{"location":"#","page":"-","title":"-","text":"Pages = [\r\n    \"sec2/page1.md\",\r\n    \"sec2/page2.md\",\r\n    \"sec2/page3.md\"\r\n    ]\r\nDepth = 2","category":"page"},{"location":"#Index-1","page":"-","title":"Index","text":"","category":"section"},{"location":"#","page":"-","title":"-","text":"","category":"page"}]
}
